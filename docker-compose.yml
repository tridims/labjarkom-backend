version: "3"
services:
  strapi-backend:
    container_name: strapi-backend
    build:
      context: .
      dockerfile: Dockerfile.prod
    image: backendlabicn:latest
    restart: unless-stopped
    env_file: .env
    environment:
      # Database
      DATABASE_CLIENT: postgres
      DATABASE_HOST: postgresdb
      DATABASE_PORT: 5432
      DATABASE_NAME: strapidb
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}

      # Application
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      APP_KEYS: ${APP_KEYS}
      NODE_ENV: production

      # Minio
      MINIO_ENDPOINT: "http://minio-storage:9000"
      MINIO_READ_ACCESS_ENDPOINT: "http://localhost:9000/strapi"
      MINIO_READ_ACCESS_ROOT_PATH: "strapi"
      MINIO_ACCESS_KEY: ${MINIO_ROOT_USER}
      MINIO_SECRET_KEY: ${MINIO_ROOT_PASSWORD}
      MINIO_BUCKET: strapi
    ports:
      - "1337:1337"
    networks:
      - backendNetwork
    depends_on:
      - postgresdb
      - minio-storage

  minio-storage:
    container_name: minio-storage
    image: quay.io/minio/minio:latest
    restart: unless-stopped
    env_file: .env
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio-data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - backendNetwork
    command: server --console-address ":9001" /data

  postgresdb:
    container_name: postgresdb
    platform: linux/amd64
    restart: unless-stopped
    env_file: .env
    image: postgres:12.0-alpine
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: strapidb
    volumes:
      - db-data:/var/lib/postgresql/data/

    ports:
      - "5432:5432"
    networks:
      - backendNetwork

volumes:
  db-data:
  minio-data:

networks:
  backendNetwork:
    name: BackendNetwork
    driver: bridge
